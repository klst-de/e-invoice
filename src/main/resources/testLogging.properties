# Logging Configuration File

handlers= java.util.logging.ConsoleHandler
# To also add the FileHandler, use the following line instead.
#handlers= java.util.logging.FileHandler, java.util.logging.ConsoleHandler

.level= ALL
# to see FINEST logging in sun.net.www.protocol.http.HttpURLConnection:
#java.util.logging.ConsoleHandler.level= FINEST
#java.util.logging.ConsoleHandler.level= FINE

java.util.logging.ConsoleHandler.formatter = my.util.logging.CustomFormatter
#java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

# WARNUNG: null - No api_key provided. [Mi Okt 21 18:14:58 MESZ 2020]
#java.util.logging.SimpleFormatter.format=%4$s: %5$s [%1$tc]%n
# [2020.10.21 18:54:52,642]WARNUNG    : null - No api_key provided.
# Doku: https://de.wikibooks.org/wiki/Java_Standard%3a_Logging_API_von_Java
# String.format(
# 0:format, 
# 1:date, 
# 2:source, 
# 3:logger,   -- getSourceClassName() - wie bekomme ich getSourceMethodName() 
# 4:level, 
# 5:message, 
# 6:thrown
#java.util.logging.SimpleFormatter.format=[%1$tY.%1$tm.%1$td %1$tH:%1$tM:%1$tS,%1$TL]%4$-13s:%3$s: %5$s %n

# %m - message
# %L - log level
# %n - name of the logger
# %t - a timestamp (in ISO-8601 "yyyy-MM-dd HH:mm:ss.SSS" format)
# %M - source method name (if available, otherwise "?")
# %c - source class name (if available, otherwise "?")
# %C - source simple class name (if available, otherwise "?")
# %T - thread ID
# %E - (Filename.java:linenumber) Slow to generate Eclipse format
# The default format is "%t %L: %E %m"
my.util.logging.CustomFormatter.format=[%t] %L: \t%c::%M: %m

# validationtool INFO kann ich nicht ausschalten
#de.kosit.validationtool.api.level = WARNING
#de.kosit.validationtool.impl.level = WARNING

#com.klst.readme.level = FINE
# test:
#com.klst.xrechnung.test.level = WARNING
#com.klst.einvoice.level = SEVERE

# default is INFO:
#com.klst.einvoice.level = INFO
#com.klst.einvoice.level = CONFIG
#com.klst.einvoice.level = FINE